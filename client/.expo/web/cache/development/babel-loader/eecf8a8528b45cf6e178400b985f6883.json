{"ast":null,"code":"import CryptoJS from \"react-native-crypto-js\";\nvar secret_key = \"My bestfriend is dog\";\n\nencrypt = function encrypt(text, cb) {\n  var CipherText = CryptoJS.AES.encrypt(text, secret_key).toString();\n  cb(CipherText);\n};\n\nencryptObject = function encryptObject(text, cb) {\n  var ciphertext = CryptoJS.AES.encrypt(JSON.stringify(text), secret_key).toString();\n  cb(ciphertext);\n};\n\ndecrypt = function decrypt(text, cb) {\n  var bytes = CryptoJS.AES.decrypt(text, secret_key);\n  var originalText = bytes.toString(CryptoJS.enc.Utf8);\n  cb(originalText);\n};\n\nmodule.exports = {\n  encrypt: encrypt,\n  encryptObject: encryptObject,\n  decrypt: decrypt\n};","map":{"version":3,"sources":["/home/luffy/Documents/Clothing/client/Screens/Crpto.js"],"names":["CryptoJS","secret_key","encrypt","text","cb","CipherText","AES","toString","encryptObject","ciphertext","JSON","stringify","decrypt","bytes","originalText","enc","Utf8","module","exports"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,wBAArB;AAEA,IAAIC,UAAU,GAAC,sBAAf;;AAEAC,OAAO,GAAC,iBAACC,IAAD,EAAMC,EAAN,EAAW;AACf,MAAIC,UAAU,GAAEL,QAAQ,CAACM,GAAT,CAAaJ,OAAb,CAAqBC,IAArB,EAA0BF,UAA1B,EAAsCM,QAAtC,EAAhB;AACAH,EAAAA,EAAE,CAACC,UAAD,CAAF;AACH,CAHD;;AAKAG,aAAa,GAAC,uBAACL,IAAD,EAAMC,EAAN,EAAW;AACrB,MAAIK,UAAU,GAAGT,QAAQ,CAACM,GAAT,CAAaJ,OAAb,CAAqBQ,IAAI,CAACC,SAAL,CAAeR,IAAf,CAArB,EAA2CF,UAA3C,EAAuDM,QAAvD,EAAjB;AACAH,EAAAA,EAAE,CAACK,UAAD,CAAF;AACH,CAHD;;AAKAG,OAAO,GAAC,iBAACT,IAAD,EAAMC,EAAN,EAAW;AACf,MAAIS,KAAK,GAAIb,QAAQ,CAACM,GAAT,CAAaM,OAAb,CAAqBT,IAArB,EAA2BF,UAA3B,CAAb;AACA,MAAIa,YAAY,GAAGD,KAAK,CAACN,QAAN,CAAeP,QAAQ,CAACe,GAAT,CAAaC,IAA5B,CAAnB;AACAZ,EAAAA,EAAE,CAACU,YAAD,CAAF;AACH,CAJD;;AAMAG,MAAM,CAACC,OAAP,GAAe;AACXhB,EAAAA,OAAO,EAAPA,OADW;AAEXM,EAAAA,aAAa,EAAbA,aAFW;AAGXI,EAAAA,OAAO,EAAPA;AAHW,CAAf","sourcesContent":["import CryptoJS from \"react-native-crypto-js\";\n\nvar secret_key=\"My bestfriend is dog\";\n\nencrypt=(text,cb)=>{\n    let CipherText= CryptoJS.AES.encrypt(text,secret_key).toString();\n    cb(CipherText);\n}\n\nencryptObject=(text,cb)=>{\n    let ciphertext = CryptoJS.AES.encrypt(JSON.stringify(text), secret_key).toString();\n    cb(ciphertext);\n}\n\ndecrypt=(text,cb)=>{\n    let bytes  = CryptoJS.AES.decrypt(text, secret_key);\n    let originalText = bytes.toString(CryptoJS.enc.Utf8);\n    cb(originalText);\n}\n\nmodule.exports={\n    encrypt,\n    encryptObject,\n    decrypt,\n}"]},"metadata":{},"sourceType":"module"}