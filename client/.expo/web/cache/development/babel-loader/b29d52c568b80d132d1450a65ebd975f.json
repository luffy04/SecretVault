{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/luffy/Documents/Clothing/client/Screens/SignUp.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { LogBox } from \"react-native-web/dist/index\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Group } from \"react-native-web/dist/index\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport { AntDesign, Entypo, Octicons, FontAwesome, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport Firebase from \"../Firebase\";\n\nvar SignUp = function (_React$Component) {\n  _inherits(SignUp, _React$Component);\n\n  var _super = _createSuper(SignUp);\n\n  function SignUp(props) {\n    var _this;\n\n    _classCallCheck(this, SignUp);\n\n    _this = _super.call(this, props);\n\n    _this.Create = function () {\n      var email = _this.state.email.trim();\n\n      var password = _this.state.password.trim();\n\n      var confirmpassword = _this.state.confirmpassword.trim();\n\n      if (email.length == 0) {\n        _this.setState({\n          emailError: \"*Email cannot be empty\"\n        });\n\n        setTimeout(function () {\n          _this.setState({\n            emailError: \"\"\n          });\n        }, 3000);\n        return;\n      }\n\n      if (password.length == 0) {\n        _this.setState({\n          passError: \"*Password cannot be empty\"\n        });\n\n        setTimeout(function () {\n          _this.setState({\n            passError: \"\"\n          });\n        }, 3000);\n        return;\n      }\n\n      if (password != confirmpassword) {\n        _this.setState({\n          confirmpassError: \"*Password does not match\"\n        });\n\n        setTimeout(function () {\n          _this.setState({\n            confirmpassError: \"\"\n          });\n        }, 3000);\n        return;\n      }\n\n      _this.setState({\n        loading: true\n      });\n\n      Firebase.auth().createUserWithEmailAndPassword(email, password).then(function (result) {\n        _this.setState({\n          loading: false\n        });\n\n        _this.props.setUser(result.user.uid);\n\n        console.log(result);\n      }).catch(function (err) {\n        _this.setState({\n          loading: false\n        });\n\n        ToastAndroid.show(\"Account already exists!\", ToastAndroid.SHORT);\n      });\n    };\n\n    _this.state = {\n      email: \"anujjha041998@gmail.com\",\n      password: \"123456\",\n      confirmpassword: \"123456\",\n      usernameColor: \"white\",\n      passwordColor: \"white\",\n      confirmpasswordColor: \"white\",\n      emailError: \"\",\n      passError: \"\",\n      confirmpassError: \"\",\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(SignUp, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          marginVertical: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: [styles.InputBox, {\n          borderColor: this.state.usernameColor\n        }],\n        value: this.state.email,\n        placeholder: \"Email\",\n        onFocus: function onFocus() {\n          return _this2.setState({\n            usernameColor: \"blue\"\n          });\n        },\n        onBlur: function onBlur() {\n          return _this2.setState({\n            usernameColor: \"white\"\n          });\n        },\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            email: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, this.state.emailError)), React.createElement(View, {\n        style: {\n          marginVertical: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: [styles.InputBox, {\n          borderColor: this.state.passwordColor\n        }],\n        value: this.state.password,\n        placeholder: \"Password\",\n        onFocus: function onFocus() {\n          return _this2.setState({\n            passwordColor: \"blue\"\n          });\n        },\n        onBlur: function onBlur() {\n          return _this2.setState({\n            passwordColor: \"white\"\n          });\n        },\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }\n      }, this.state.passError)), React.createElement(View, {\n        style: {\n          marginVertical: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: [styles.InputBox, {\n          borderColor: this.state.confirmpasswordColor\n        }],\n        value: this.state.confirmpassword,\n        placeholder: \"Confirm Password\",\n        onFocus: function onFocus() {\n          return _this2.setState({\n            confirmpasswordColor: \"blue\"\n          });\n        },\n        onBlur: function onBlur() {\n          return _this2.setState({\n            confirmpasswordColor: \"white\"\n          });\n        },\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            confirmpassword: text\n          });\n        },\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }, this.state.confirmpassError)), React.createElement(View, {\n        style: {\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        disabled: this.state.loading,\n        onPress: function onPress() {\n          return _this2.Create();\n        },\n        style: {\n          justifyContent: \"center\",\n          marginVertical: 10,\n          padding: 10,\n          borderRadius: 5,\n          backgroundColor: \"chartreuse\",\n          width: 200,\n          flexDirection: \"row\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }\n      }, \"CREATE\"), this.state.loading ? React.createElement(ActivityIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 48\n        }\n      }) : React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 70\n        }\n      }))));\n    }\n  }]);\n\n  return SignUp;\n}(React.Component);\n\nexport { SignUp as default };\nvar styles = StyleSheet.create({\n  InputBox: {\n    paddingVertical: 8,\n    paddingHorizontal: 10,\n    borderWidth: 2,\n    borderRadius: 5,\n    width: 250\n  }\n});","map":{"version":3,"sources":["/home/luffy/Documents/Clothing/client/Screens/SignUp.js"],"names":["React","LogBox","Group","AntDesign","Entypo","Octicons","FontAwesome","MaterialCommunityIcons","Firebase","SignUp","props","Create","email","state","trim","password","confirmpassword","length","setState","emailError","setTimeout","passError","confirmpassError","loading","auth","createUserWithEmailAndPassword","then","result","setUser","user","uid","console","log","catch","err","ToastAndroid","show","SHORT","usernameColor","passwordColor","confirmpasswordColor","marginVertical","styles","InputBox","borderColor","text","color","alignItems","justifyContent","padding","borderRadius","backgroundColor","width","flexDirection","fontWeight","Component","StyleSheet","create","paddingVertical","paddingHorizontal","borderWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ActivityIndicator, Platform, LogBox , StatusBar, StyleSheet, SafeAreaView,Switch , Text, View, TextInput, KeyboardAvoidingView, TouchableOpacity, Image, Picker, ScrollView, Group, Alert, ToastAndroid } from 'react-native';\nimport { AntDesign, Entypo, Octicons, FontAwesome, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport Firebase from '../Firebase';\n\nexport default class SignUp extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n            email:\"anujjha041998@gmail.com\",\n            password:\"123456\",\n            confirmpassword:\"123456\",\n            usernameColor:\"white\",\n            passwordColor:\"white\",\n            confirmpasswordColor:\"white\",\n            emailError:\"\",\n            passError:\"\",\n            confirmpassError:\"\",\n            loading:false\n        }\n    }\n\n    Create=()=>{\n        var email=this.state.email.trim();\n        var password=this.state.password.trim();\n        var confirmpassword=this.state.confirmpassword.trim();\n        if(email.length==0){\n            this.setState({emailError:\"*Email cannot be empty\"})\n            setTimeout(()=>{\n                this.setState({emailError:\"\"})\n            },3000)\n            return;\n        }\n        if(password.length==0){\n            this.setState({passError:\"*Password cannot be empty\"})\n            setTimeout(()=>{\n                this.setState({passError:\"\"})\n            },3000)\n            return;\n        }\n        if(password!=confirmpassword){\n            this.setState({confirmpassError:\"*Password does not match\"})\n            setTimeout(()=>{\n                this.setState({confirmpassError:\"\"})\n            },3000)\n            return;\n        }\n        this.setState({loading:true})\n        Firebase.auth().createUserWithEmailAndPassword(email,password)\n        .then((result)=>{\n            this.setState({loading:false})\n            this.props.setUser(result.user.uid);\n            console.log(result);\n        }).catch(err=>{\n            this.setState({loading:false})\n            ToastAndroid.show(\"Account already exists!\", ToastAndroid.SHORT);\n        });\n    }\n\n    render() {\n        return (\n            <View>\n                <View style={{marginVertical:15}}>\n                    <TextInput \n                        style={[styles.InputBox,{borderColor:this.state.usernameColor}]}\n                        value={this.state.email}\n                        placeholder=\"Email\"\n                        onFocus={()=>this.setState({usernameColor:\"blue\"})}\n                        onBlur={()=>this.setState({usernameColor:\"white\"})}\n                        onChangeText={(text)=>this.setState({email:text})}\n                    />\n                    <Text style={{color:\"red\"}}>{this.state.emailError}</Text>\n                </View>\n                <View style={{marginVertical:15}}>\n                    <TextInput \n                        style={[styles.InputBox,{borderColor:this.state.passwordColor}]}\n                        value={this.state.password}\n                        placeholder=\"Password\"\n                        onFocus={()=>this.setState({passwordColor:\"blue\"})}\n                        onBlur={()=>this.setState({passwordColor:\"white\"})}\n                        onChangeText={(text)=>this.setState({password:text})}\n                        secureTextEntry={true}\n                    />\n                    <Text style={{color:\"red\"}}>{this.state.passError}</Text>\n                </View>\n                <View style={{marginVertical:15}}>\n                    <TextInput \n                        style={[styles.InputBox,{borderColor:this.state.confirmpasswordColor}]}\n                        value={this.state.confirmpassword}\n                        placeholder=\"Confirm Password\"\n                        onFocus={()=>this.setState({confirmpasswordColor:\"blue\"})}\n                        onBlur={()=>this.setState({confirmpasswordColor:\"white\"})}\n                        onChangeText={(text)=>this.setState({confirmpassword:text})}\n                        secureTextEntry={true}\n                    />\n                    <Text style={{color:\"red\"}}>{this.state.confirmpassError}</Text>\n                </View>\n                <View style={{alignItems:\"center\"}}> \n                    <TouchableOpacity disabled={this.state.loading} onPress={()=> this.Create()} style={{justifyContent:\"center\",marginVertical:10,padding:10,borderRadius:5,backgroundColor:\"chartreuse\",width:200,flexDirection:\"row\"}}>\n                        <Text style={{color:\"white\",fontWeight:\"bold\"}}>CREATE</Text>\n                        {\n                            this.state.loading?<ActivityIndicator />:<Text />\n                        }\n                    </TouchableOpacity>\n                </View>\n            </View>\n        );\n    }\n  \n}\n\nvar styles=StyleSheet.create({\n    InputBox:{\n        paddingVertical:8,\n        paddingHorizontal:10,\n        borderWidth:2,\n        borderRadius:5,\n        width:250,\n    }\n})"]},"metadata":{},"sourceType":"module"}