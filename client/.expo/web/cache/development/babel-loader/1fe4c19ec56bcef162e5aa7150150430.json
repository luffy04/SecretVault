{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport Crypto from \"./Crpto\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\n\ngetItem = function getItem(key, cb) {\n  var text;\n  return _regeneratorRuntime.async(function getItem$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n        case 2:\n          text = _context.sent;\n          Crypto.decrypt(text, function (result) {\n            cb(result);\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nsetItemObject = function setItemObject(key, value) {\n  Crypto.encryptObject(value, function (result) {\n    AsyncStorage.setItem(key, result);\n    return result;\n  });\n};\n\nsetItem = function setItem(key, value) {\n  Crypto.encrypt(value, function (result) {\n    AsyncStorage.setItem(key, result);\n    return result;\n  });\n};\n\nremoveItem = function removeItem(key) {\n  return _regeneratorRuntime.async(function removeItem$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.removeItem(key));\n\n        case 3:\n          return _context2.abrupt(\"return\", true);\n\n        case 6:\n          _context2.prev = 6;\n          _context2.t0 = _context2[\"catch\"](0);\n          return _context2.abrupt(\"return\", false);\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 6]], Promise);\n};\n\nmodule.exports = {\n  getItem: getItem,\n  setItemObject: setItemObject,\n  setItem: setItem,\n  removeItem: removeItem\n};","map":{"version":3,"sources":["/home/luffy/Documents/Clothing/client/Screens/LocalStorage.js"],"names":["Crypto","getItem","key","cb","AsyncStorage","text","decrypt","result","setItemObject","value","encryptObject","setItem","encrypt","removeItem","module","exports"],"mappings":";AAAA,OAAOA,MAAP;;;AAGAC,OAAO,GAAC,iBAAOC,GAAP,EAAWC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACWC,YAAY,CAACH,OAAb,CAAqBC,GAArB,CADX;;AAAA;AACAG,UAAAA,IADA;AAEJL,UAAAA,MAAM,CAACM,OAAP,CAAeD,IAAf,EAAoB,UAACE,MAAD,EAAU;AAC1BJ,YAAAA,EAAE,CAACI,MAAD,CAAF;AACH,WAFD;;AAFI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAR;;AAOAC,aAAa,GAAG,uBAACN,GAAD,EAAKO,KAAL,EAAa;AACzBT,EAAAA,MAAM,CAACU,aAAP,CAAqBD,KAArB,EAA2B,UAACF,MAAD,EAAU;AACjCH,IAAAA,YAAY,CAACO,OAAb,CAAqBT,GAArB,EAAyBK,MAAzB;AACA,WAAOA,MAAP;AACH,GAHD;AAIH,CALD;;AAOAI,OAAO,GAAG,iBAACT,GAAD,EAAKO,KAAL,EAAa;AACnBT,EAAAA,MAAM,CAACY,OAAP,CAAeH,KAAf,EAAqB,UAACF,MAAD,EAAU;AAC3BH,IAAAA,YAAY,CAACO,OAAb,CAAqBT,GAArB,EAAyBK,MAAzB;AACA,WAAOA,MAAP;AACH,GAHD;AAIH,CALD;;AAOAM,UAAU,GAAC,oBAAOX,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEGE,YAAY,CAACS,UAAb,CAAwBX,GAAxB,CAFH;;AAAA;AAAA,4CAGI,IAHJ;;AAAA;AAAA;AAAA;AAAA,4CAKI,KALJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAX;;AAUAY,MAAM,CAACC,OAAP,GAAe;AACXd,EAAAA,OAAO,EAAPA,OADW;AAEXO,EAAAA,aAAa,EAAbA,aAFW;AAGXG,EAAAA,OAAO,EAAPA,OAHW;AAIXE,EAAAA,UAAU,EAAVA;AAJW,CAAf","sourcesContent":["import Crypto from \"./Crpto\";\nimport {AsyncStorage} from \"react-native\";\n\ngetItem=async (key,cb)=>{\n    let text=await AsyncStorage.getItem(key);\n    Crypto.decrypt(text,(result)=>{\n        cb(result)\n    })\n}\n\nsetItemObject = (key,value)=>{\n    Crypto.encryptObject(value,(result)=>{\n        AsyncStorage.setItem(key,result);\n        return result;\n    })\n}\n\nsetItem = (key,value)=>{\n    Crypto.encrypt(value,(result)=>{\n        AsyncStorage.setItem(key,result)\n        return result;\n    })\n}\n\nremoveItem=async (key)=>{\n    try{\n        await AsyncStorage.removeItem(key);\n        return true;\n    }catch(exception){\n        return false;\n    }\n    \n}\n\nmodule.exports={\n    getItem,\n    setItemObject,\n    setItem,\n    removeItem\n}"]},"metadata":{},"sourceType":"module"}