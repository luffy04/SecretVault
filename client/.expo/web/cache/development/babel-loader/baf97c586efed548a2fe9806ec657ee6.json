{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/luffy/Documents/Clothing/client/Screens/Login.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Group } from \"react-native-web/dist/index\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { AntDesign, Entypo, Octicons, FontAwesome, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport Firebase from \"../Firebase\";\nimport LocalStorage from \"./LocalStorage\";\nimport App from \"../App\";\n\nvar Login = function (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n\n    _this.loadUser = function _callee(uid, cb) {\n      var documents, docs;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              documents = Firebase.firestore().collection(\"Users\");\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(documents.doc(uid).get());\n\n            case 4:\n              docs = _context.sent;\n\n              if (docs.exists) {\n                cb(docs.data());\n              } else {\n                console.log(\"not exist\");\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              console.log(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 8]], Promise);\n    };\n\n    _this.LoginSecurely = function _callee2() {\n      var email, password;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              email = _this.state.email.trim();\n              password = _this.state.password.trim();\n\n              if (!(email.length == 0)) {\n                _context2.next = 6;\n                break;\n              }\n\n              _this.setState({\n                emailError: \"*Email cannot be empty\"\n              });\n\n              setTimeout(function () {\n                _this.setState({\n                  emailError: \"\"\n                });\n              }, 3000);\n              return _context2.abrupt(\"return\");\n\n            case 6:\n              if (!(password.length == 0)) {\n                _context2.next = 10;\n                break;\n              }\n\n              _this.setState({\n                passError: \"*Password cannot be empty\"\n              });\n\n              setTimeout(function () {\n                _this.setState({\n                  passError: \"\"\n                });\n              }, 3000);\n              return _context2.abrupt(\"return\");\n\n            case 10:\n              _this.setState({\n                loading: true\n              });\n\n              Firebase.auth().signInWithEmailAndPassword(email, password).then(function (result) {\n                _this.loadUser(result.user.uid, function (data) {\n                  data[\"id\"] = result.user.uid;\n                  LocalStorage.setItem(\"isLogged\", \"true\");\n                  LocalStorage.setItemObject(\"User\", data);\n\n                  _this.props.setUser(data);\n\n                  _this.setState({\n                    loading: false\n                  });\n                });\n              }).catch(function (err) {\n                console.log(err);\n\n                _this.setState({\n                  loading: false\n                });\n\n                ToastAndroid.show(\"Wrong Credentials!\", ToastAndroid.SHORT);\n              });\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      email: \"anujjha041998@gmail.com\",\n      password: \"Monkeydluffy1@\",\n      usernameColor: \"white\",\n      passwordColor: \"white\",\n      emailError: \"\",\n      passError: \"\",\n      loading: false\n    };\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: {\n          marginVertical: 15\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: [styles.InputBox, {\n          borderColor: this.state.usernameColor\n        }],\n        value: this.state.email,\n        placeholder: \"Email\",\n        onFocus: function onFocus() {\n          return _this2.setState({\n            usernameColor: \"blue\"\n          });\n        },\n        onBlur: function onBlur() {\n          return _this2.setState({\n            usernameColor: \"white\"\n          });\n        },\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            email: text\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }\n      }, this.state.emailError)), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }\n      }, React.createElement(TextInput, {\n        style: [styles.InputBox, {\n          borderColor: this.state.passwordColor\n        }],\n        value: this.state.password,\n        placeholder: \"Password\",\n        onFocus: function onFocus() {\n          return _this2.setState({\n            passwordColor: \"blue\"\n          });\n        },\n        onBlur: function onBlur() {\n          return _this2.setState({\n            passwordColor: \"white\"\n          });\n        },\n        onChangeText: function onChangeText(text) {\n          return _this2.setState({\n            password: text\n          });\n        },\n        secureTextEntry: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }\n      }), React.createElement(Text, {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }, this.state.passError)), React.createElement(View, {\n        style: {\n          alignItems: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }\n      }, React.createElement(TouchableOpacity, {\n        disabled: this.state.loading,\n        onPress: function onPress() {\n          return _this2.LoginSecurely();\n        },\n        style: {\n          justifyContent: \"center\",\n          marginVertical: 10,\n          padding: 10,\n          borderRadius: 5,\n          backgroundColor: \"chartreuse\",\n          width: 200,\n          flexDirection: \"row\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\",\n          fontWeight: \"bold\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }\n      }, \"LOGIN\"), this.state.loading ? React.createElement(ActivityIndicator, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 48\n        }\n      }) : React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 70\n        }\n      }))));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nexport { Login as default };\nvar styles = StyleSheet.create({\n  InputBox: {\n    paddingVertical: 8,\n    paddingHorizontal: 10,\n    borderWidth: 2,\n    borderRadius: 5,\n    width: 250\n  }\n});","map":{"version":3,"sources":["/home/luffy/Documents/Clothing/client/Screens/Login.js"],"names":["React","Group","AntDesign","Entypo","Octicons","FontAwesome","MaterialCommunityIcons","Firebase","LocalStorage","App","Login","props","loadUser","uid","cb","documents","firestore","collection","doc","get","docs","exists","data","console","log","LoginSecurely","email","state","trim","password","length","setState","emailError","setTimeout","passError","loading","auth","signInWithEmailAndPassword","then","result","user","setItem","setItemObject","setUser","catch","err","ToastAndroid","show","SHORT","usernameColor","passwordColor","marginVertical","styles","InputBox","borderColor","text","color","alignItems","justifyContent","padding","borderRadius","backgroundColor","width","flexDirection","fontWeight","Component","StyleSheet","create","paddingVertical","paddingHorizontal","borderWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ActivityIndicator, Platform, StatusBar, StyleSheet, ToastAndroid,Switch , Text, View, TextInput, KeyboardAvoidingView, TouchableOpacity, Image, Picker, ScrollView, Group, Alert } from 'react-native';\nimport { AntDesign, Entypo, Octicons, FontAwesome, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport Firebase from '../Firebase';\nimport LocalStorage from \"./LocalStorage\";\nimport App from \"../App\"\n\nexport default class Login extends React.Component {\n    constructor(props){\n        super(props);\n        this.state={\n            email:\"anujjha041998@gmail.com\",\n            password:\"Monkeydluffy1@\",\n            usernameColor:\"white\",\n            passwordColor:\"white\",\n            emailError:\"\",\n            passError:\"\",\n            loading:false\n        }\n    }\n\n    loadUser=async (uid,cb)=>{\n    var documents=Firebase.firestore().collection(\"Users\");\n    \n    try{\n        var docs=await documents.doc(uid).get();\n        if(docs.exists){\n            cb(docs.data());\n        }else{\n            console.log(\"not exist\");\n        }\n    }catch(err){\n        console.log(err)\n        }\n    }\n\n    LoginSecurely=async()=>{\n        var email=this.state.email.trim();\n        var password=this.state.password.trim();\n\n        if(email.length==0){\n            this.setState({emailError:\"*Email cannot be empty\"})\n            setTimeout(()=>{\n                this.setState({emailError:\"\"})\n            },3000)\n            return;\n        }\n        if(password.length==0){\n            this.setState({passError:\"*Password cannot be empty\"})\n            setTimeout(()=>{\n                this.setState({passError:\"\"})\n            },3000)\n            return;\n        }\n        this.setState({loading:true})\n        Firebase.auth().signInWithEmailAndPassword(email,password)\n        .then((result)=> {\n            this.loadUser(result.user.uid,(data)=>{\n                data[\"id\"]=result.user.uid;\n                LocalStorage.setItem(\"isLogged\",\"true\");\n                LocalStorage.setItemObject(\"User\",data);\n                this.props.setUser(data);\n                this.setState({loading:false})\n            })\n\n        })\n        .catch(err=>{\n            console.log(err)\n            this.setState({loading:false})\n            ToastAndroid.show(\"Wrong Credentials!\", ToastAndroid.SHORT);\n        })\n    }\n\n    render() {\n        return (\n            <View>\n                <View style={{marginVertical:15}}>\n                    <TextInput \n                        style={[styles.InputBox,{borderColor:this.state.usernameColor}]}\n                        value={this.state.email}\n                        placeholder=\"Email\"\n                        onFocus={()=>this.setState({usernameColor:\"blue\"})}\n                        onBlur={()=>this.setState({usernameColor:\"white\"})}\n                        onChangeText={(text)=>this.setState({email:text})}\n                    />\n                    <Text style={{color:\"red\"}}>{this.state.emailError}</Text>\n                </View>\n                <View>\n                    <TextInput \n                        style={[styles.InputBox,{borderColor:this.state.passwordColor}]}\n                        value={this.state.password}\n                        placeholder=\"Password\"\n                        onFocus={()=>this.setState({passwordColor:\"blue\"})}\n                        onBlur={()=>this.setState({passwordColor:\"white\"})}\n                        onChangeText={(text)=>this.setState({password:text})}\n                        secureTextEntry={true}\n                    />\n                    <Text style={{color:\"red\"}}>{this.state.passError}</Text>\n                </View>\n                <View style={{alignItems:\"center\"}}> \n                    <TouchableOpacity disabled={this.state.loading} onPress={()=> this.LoginSecurely()} style={{justifyContent:\"center\",marginVertical:10,padding:10,borderRadius:5,backgroundColor:\"chartreuse\",width:200,flexDirection:\"row\"}}>\n                        <Text style={{color:\"white\",fontWeight:\"bold\"}}>LOGIN</Text>\n                        {\n                            this.state.loading?<ActivityIndicator />:<Text />\n                        }\n                    </TouchableOpacity>\n                </View>\n            </View>\n        );\n    }\n \n}\n\nvar styles=StyleSheet.create({\n    InputBox:{\n        paddingVertical:8,\n        paddingHorizontal:10,\n        borderWidth:2,\n        borderRadius:5,\n        width:250,\n    }\n})\n"]},"metadata":{},"sourceType":"module"}